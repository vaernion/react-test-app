{"version":3,"sources":["components/Home.js","components/Login.js","components/Signup.js","components/About.js","components/Media.js","components/Secret.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","className","src","logo","alt","href","target","rel","Login","props","handleChange","event","setState","name","value","handleKeyPress","key","handleSubmit","preventDefault","password","state","username","hashPassword","saltRounds","hash","bind","bcrypt","compareSync","this","then","console","log","onSubmit","onKeyPress","type","onChange","placeholder","autoFocus","React","Component","Signup","About","Media","Secret","hasLoggedIn","isAnon","userId","subpages","Menu","id","to","width","map","page","i","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.070df939.chunk.js","sourcesContent":["import React from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"Home-header\">\r\n        <img src={logo} className=\"Home-logo\" alt=\"logo\" />\r\n        <a\r\n          className=\"Home-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      hash: \"\",\r\n      saltRounds: 13\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleKeyPress = event => {\r\n    if (event.key === \"Enter\") this.handleSubmit(event);\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // let username = this.state.username;\r\n    let password = this.state.password;\r\n    this.setState({ username: \"\", password: \"\" });\r\n    this.hashPassword(password, this.state.saltRounds);\r\n  };\r\n  comparePassword() {\r\n    bcrypt.compareSync(this.state.password, this.state.hash);\r\n  }\r\n  hashPassword(password, saltRounds) {\r\n    // return bcrypt.hashSync(password, saltRounds);\r\n    bcrypt\r\n      .hash(password, saltRounds)\r\n      .then(hash => this.setState({ hash: hash }))\r\n      .then(console.log(this.state.hash));\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div>\r\n        login form\r\n        <br />\r\n        <form onSubmit={this.handleSubmit} onKeyPress={this.handleKeyPress}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"username\"\r\n            autoFocus\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"password\"\r\n          />\r\n          <br />\r\n          <button type=\"submit\">submit</button>\r\n        </form>\r\n        <div>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras\r\n            euismod risus sit amet odio blandit interdum. Curabitur accumsan\r\n            mauris sit amet blandit feugiat. Etiam vehicula tincidunt sem, at\r\n            scelerisque ligula fringilla ac. Quisque orci mi, vehicula varius\r\n            augue non, ullamcorper cursus nulla. Quisque placerat libero at erat\r\n            vulputate efficitur. Fusce vulputate felis lectus, ac sagittis\r\n            turpis fringilla at. Vivamus metus orci, fringilla vel ante eu,\r\n            vestibulum sollicitudin neque.\r\n          </p>\r\n          <p>\r\n            Nunc nec ipsum a ipsum ullamcorper ullamcorper non a dolor. Nunc\r\n            accumsan quam ut tortor ornare tempor. Donec odio urna, ornare a\r\n            justo sit amet, vulputate pellentesque mauris. Donec at lacus at\r\n            risus faucibus fermentum. Nunc ultricies, ex id porta pretium,\r\n            ligula nisi dignissim tellus, et mattis nulla mauris sed nisl. Class\r\n            aptent taciti sociosqu ad litora torquent per conubia nostra, per\r\n            inceptos himenaeos. Donec a elit feugiat, scelerisque neque id,\r\n            ultricies massa. Phasellus gravida sodales lectus venenatis\r\n            molestie. Pellentesque commodo enim eros, ut congue magna cursus\r\n            vitae.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Signup() {\r\n  return <div>signup form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return <div>About</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Media() {\r\n  return <div>Media</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Secret(props) {\r\n  console.log(props);\r\n  if (props.hasLoggedIn === true) {\r\n    if (props.isAnon === false) {\r\n      return <div>Secret area for {props.userId}</div>;\r\n    } else {\r\n      return <div>Secret area for anon</div>;\r\n    }\r\n  } else {\r\n    return <div>You are not allowed here</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport About from \"./components/About\";\nimport Media from \"./components/Media\";\nimport Secret from \"./components/Secret\";\n\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\n\nconst subpages = [\"About\", \"Media\", \"Secret\", \"Login\", \"Signup\"];\n\nfunction Menu() {\n  return (\n    <nav id=\"menu\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"home\" width=\"100px\" />\n      </Link>\n      <ul>\n        {subpages.map((page, i) => (\n          <li key={i}>\n            <Link to={\"/\" + page}>{page}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasLoggedIn: false, userId: 0, isAnon: false };\n  }\n\n  render() {\n    return (\n      <Router basename=\"/react-test-app\">\n        <Menu />\n        <div id=\"pageContainer\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/media\">\n              <Media />\n            </Route>\n            <Route path=\"/secret\" {...this.state}>\n              <Secret />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}